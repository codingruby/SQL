#In this SQL, I have downloaded a Digital Media Store Database called 'Chinook' on SQLite, where I will be extracting information through a list of questions.

# 1. Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT CustomerId, FirstName, LastName, Country
FROM customers
WHERE Country != 'USA';

# 2. Show only the Customers from Brazil.
SELECT *
FROM customers
WHERE Country = 'Brazil';

# 3. Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT FirstName, LastName, InvoiceId, InvoiceDate, BillingCountry
FROM customers
JOIN invoices
ON customers.CustomerId = invoices.CustomerId
WHERE BillingCountry = 'Brazil';

# 4. Show the Employees who are Sales Agents.
SELECT *
FROM employees;
---This is to have a look at the table to get correct names/spelling.

SELECT * 
FROM employees
WHERE Title = 'Sales Support Agent';

# 5. Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry
FROM invoices;

# 6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT FirstName, LastName, InvoiceId 
FROM employees
JOIN customers
ON customers.SupportRepId = employees.EmployeeId
JOIN invoices
ON invoices.CustomerId = customers.CustomerId;

# 7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
LECT i.Total, c.FirstName AS cust_first, c.LastName AS cust_surname, 
c.Country, e.FirstName AS emp_first, e.LastName AS emp_surname
FROM invoices i
JOIN customers c
ON i.CustomerId = c.CustomerId
JOIN employees e
ON c.SupportRepId = e.EmployeeId;

# 8. How many Invoices were there in 2009?
SELECT COUNT(*)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

# 9. What are the total sales for 2009?
ELECT SUM(Total)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

# 10. Write a query that includes the purchased track name with each invoice line ID.
SELECT t.Name, ii.InvoiceLineId
FROM Invoice_items ii
JOIN Tracks t 
ON ii.TrackId = t.TrackId;

# 11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT t.Name, a.Name AS Artist, ii.InvoiceLineId 
FROM tracks t
JOIN invoice_items ii
ON t.TrackId = ii.TrackId
JOIN albums al
ON al.AlbumId = t.AlbumId
JOIN artists a
ON a.ArtistId = al.ArtistId;

# 12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.Name AS TrackName, a.Title AS Album, mt.Name AS mediatype, g.Name AS Genre
FROM tracks t
JOIN albums a
ON t.AlbumId = a.AlbumId
JOIN media_types mt
ON mt.MediaTypeId = t.MediaTypeId
JOIN genres g
ON g.GenreId = t.GenreId;

# 13. Show the total sales made by each sales agent.
SELECT e.FirstName, e.LastName,
ROUND(SUM(i.Total), 2) AS 'Total Sales'
FROM invoices i
JOIN customers c
ON i.CustomerId = c.CustomerId
JOIN employees e
ON e.EmployeeId = c.SupportRepId
WHERE e.Title = 'Sales Support Agent'
GROUP BY e.FirstName;

# 14. Which sales agent made the most dollars in sales in 2009?
SELECT e.FirstName, e.LastName, 
ROUND(SUM(i.Total), 2) AS 'Total Sales'
FROM employees e
JOIN customers c
ON e.EmployeeId = c.SupportRepId
JOIN invoices i
ON c.CustomerId = i.CustomerId
WHERE e.Title = 'Sales Support Agent'
AND i.InvoiceDate LIKE '2009%'
GROUP BY e.FirstName
ORDER BY ROUND(SUM(i.Total), 2) DESC
LIMIT 1;

Extra questions that I used ChatGPT to come up with :)
# 15. How many employees are there in the database?
SELECT COUNT(EmployeeId)
FROM employees;

# 16. How many invoices are in the database?
SELECT COUNT(InvoiceId)
FROM invoices;

--OR

SELECT COUNT(*)
FROM invoices;

# 17. What is the total revenue from the invoices?
SELECT ROUND(SUM(Total), 2) AS total_revenue
FROM invoices;

# 18. What is the average number of albums per artist?
SELECT ROUND(AVG(album_count)) AS avg_albums
FROM (
SELECT COUNT(*) AS album_count
FROM albums
GROUP BY ArtistId);

# 19. What are the top-selling tracks in the database, and how many times have they been sold?
SELECT Name AS track_name, SUM(Quantity) AS total_sales
FROM tracks
JOIN invoice_items 
ON tracks.TrackId = invoice_items.TrackId
GROUP BY tracks.TrackId
ORDER BY total_sales DESC
LIMIT 5;

# 20. Can you provide a breakdown of revenue by genre?
SELECT genres.Name AS genre_name, ROUND(SUM(invoice_items.UnitPrice * invoice_items.Quantity), 2) AS revenue
FROM genres
JOIN tracks 
ON genres.GenreId = tracks.GenreId
JOIN invoice_items 
ON tracks.TrackId = invoice_items.TrackId
GROUP BY genres.Name
ORDER BY revenue DESC;



