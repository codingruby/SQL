#In this SQLite Studio, I'm querying a database with multiple tables in it to extract information about customer and order data.

#1. How many orders were placed in January? --The last two lines of the query are to clean up the data and to not show any Nulls, ... values or simply nothing at all.
SELECT COUNT(orderID) 
FROM JanSales
WHERE LENGTH(orderID) = 6
AND orderID <> 'Order ID';

#2. How many of those orders were for an iPhone? 
SELECT COUNT(orderID)
FROM JanSales
WHERE product = 'iPhone'
AND LENGTH(orderID) = 6
AND orderID <> 'Order ID';

#3. Select the customer account numbers for all the orders that were placed in February. 
SELECT DISTINCT acctnum
FROM Customers 
INNER JOIN FebSales 
ON Customers.order_id = FebSales.orderID
WHERE length(orderid) = 6 
AND orderID <> 'Order ID';

#4. Which product was the cheapest one sold in January, and what was the price? 
SELECT Product, MIN(Price)
FROM JanSales
LIMIT 1;

--or it can be done with a subquery
SELECT DISTINCT Product, Price
FROM JanSales
WHERE Price IN (SELECT MIN(Price) FROM JanSales);

#5. What is the total revenue for each product sold in January?
SELECT SUM(quantity)*price AS revenue, product
FROM JanSales
GROUP BY product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT SUM(quantity), product, SUM(quantity)*price AS revenue
FROM FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

#7. How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
SELECT COUNT(DISTINCT acctnum), AVG(quantity*price)
FROM Customers
LEFT JOIN Febsales
ON Customers.order_id = FebSales.orderID 
WHERE quantity > 2
AND LENGTH(orderID) = 6
AND orderID <> 'Order ID';

#8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(quantity)
FROM FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY Product;
